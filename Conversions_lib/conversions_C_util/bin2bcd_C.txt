bin2bcd_C.txt
21oct14 ndp
13dec20

Binary to BCD Conversion - 10, 13, & 16 bit binary to 4 & 5 digit BCD.

C callable.

Use Left justified 10 bit binary (ADLAR=0) for ADC conversion.
Use Right justified 13 and 16 bit binary for general conversion.

void bin2bcd_10_4(uint16_t bin10val, uint8_t* bcdBuffer);	// for ADC buffer[2]
void bin2bcd_13_4(uint16_t bin13val, uint8_t* bcdBuffer);	// buffer[2]
void bin2bcd_16_4(uint16_t bin16val, uint8_t* bcdBuffer);	// buffer[3]

Algorythm
Test if any nibble of >=5 is to be shifted, then add 3 to nibble.

Detailed example: [HEX]0x7F -> [BCD]127
Shift left
    A           B
    111         1111
If A3:0 >= 0x05 add 0x03
    1010        1111
If A7:4 >= 0x50 add 0x30
Shift left
    10101       111
If A3:0 >= 0x05 add 0x03
    11000       111
If A7:4 >= 0x50 add 0x30
Shift left
    110001      11
If A3:0 >= 0x05 add 0x03
If A7:4 >= 0x50 add 0x30
Shift left
    1100011     1
If A3:0 >= 0x05 add 0x03
If A7:4 >= 0x50 add 0x30
    10010011    1
Shift left
    1 0010 0111
Done
A = 127 BCD

General example: [10bit binary]11 11010111 -> [3byte BCD]983
    11                11010111
    111               1010111      add 3
    1010              1010111
    1 0101            010111       add 3
    1 1000            010111
    11 0000           10111
    110 0001          0111         add 3
    1001 0001         0111
    1 0010 0010       111
    10 0100 0101      11           add 3
    10 0100 1000      11
    100 1001 0001     1            add 3
    100 1100 0001     1

    1001 1000 0011
